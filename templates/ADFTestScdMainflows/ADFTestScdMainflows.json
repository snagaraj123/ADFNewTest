{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name"
		},
		"AzureSqlDatabaseADFTest": {
			"type": "string"
		},
		"AzureBlobADFTest": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADFTestScdMainflows')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SCDType2Modified",
						"type": "ExecuteDataFlow",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"dataflow": {
								"referenceName": "SCDType2Modified",
								"type": "DataFlowReference"
							},
							"compute": {
								"computeType": "General",
								"coreCount": 8
							}
						}
					},
					{
						"name": "SCDUpdate",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "SCDType2Modified",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"dataflow": {
								"referenceName": "SCDUpdate",
								"type": "DataFlowReference"
							},
							"compute": {
								"computeType": "General",
								"coreCount": 8
							}
						}
					},
					{
						"name": "SCDInsertUpdate",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "SCDUpdate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"dataflow": {
								"referenceName": "SCDInsertUpdate",
								"type": "DataFlowReference"
							},
							"compute": {
								"computeType": "General",
								"coreCount": 8
							}
						}
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SCDType2Modified')]",
				"[concat(variables('factoryId'), '/dataflows/SCDUpdate')]",
				"[concat(variables('factoryId'), '/dataflows/SCDInsertUpdate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCDType2Modified')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSQLCustomTrans",
								"type": "DatasetReference"
							},
							"name": "CustomerTrans",
							"script": "source(output(\n\t\tCustomer_Id as integer,\n\t\tLocation as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100,\n\tformat: 'table') ~> CustomerTrans"
						},
						{
							"dataset": {
								"referenceName": "AzureCustmoerDim",
								"type": "DatasetReference"
							},
							"name": "CustomerDim",
							"script": "source(output(\n\t\tCust_Key as integer,\n\t\tCustomer_Id as integer,\n\t\tLocation as string,\n\t\tBegin_Date as date,\n\t\tEnd_Date as date\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'table') ~> CustomerDim"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "UpdateAndNewInserts",
							"script": "GenSKs sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('hash', 1),\n\tpartitionFileNames:['testr.csv']) ~> UpdateAndNewInserts"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "UpdateExisting",
							"script": "UpdateUpdate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tmapColumn(\n\t\tCust_Key,\n\t\tCustomer_Id,\n\t\tLocation,\n\t\tEnd_Date = NewEndDate\n\t),\n\tpartitionBy('hash', 1),\n\tpartitionFileNames:['TestML.csv']) ~> UpdateExisting"
						}
					],
					"transformations": [
						{
							"name": "ExtractNonExpRecs",
							"script": "CustomerDim filter(equals(toString(End_Date), '9999-12-31')) ~> ExtractNonExpRecs"
						},
						{
							"name": "RenameColumns",
							"script": "CustomerTrans select(mapColumn(\n\t\tCustomerId = Customer_Id,\n\t\tLoc = Location\n\t))~> RenameColumns"
						},
						{
							"name": "JoinSrcTarget",
							"script": "RenameColumns, ExtractNonExpRecs join(CustomerId == Customer_Id,\n\tjoinType:'left',\n\tbroadcast: 'none')~> JoinSrcTarget"
						},
						{
							"name": "DeriveNewOrExisting",
							"script": "JoinSrcTarget derive(CheckNewRow = iif(CustomerId == Customer_Id  && Location != Loc, 1,0),\n\t\tBrandNewRow = iif(notEquals(CustomerId, iif(isNull(Customer_Id), 0, Customer_Id)) , 1, iif((CustomerId == CustomerId && Location != Loc),2,0)),\n\t\tEndDate = '9999-12-31',\n\t\tBeginDate = currentDate(),\n\t\tNewEndDate = currentDate()) ~> DeriveNewOrExisting"
						},
						{
							"name": "NewRowSelect",
							"script": "DeriveNewOrExisting filter(equals(BrandNewRow, 1)) ~> NewRowSelect"
						},
						{
							"name": "NewRowToInsert",
							"script": "NewRowSelect select(mapColumn(\n\t\tCustomer_Id = CustomerId,\n\t\tLocation = Loc,\n\t\tCust_Key,\n\t\tEnd_Date = EndDate,\n\t\tBegin_Date = BeginDate\n\t))~> NewRowToInsert"
						},
						{
							"name": "UpdatedRows",
							"script": "DeriveNewOrExisting filter(equals(BrandNewRow, 2)) ~> UpdatedRows"
						},
						{
							"name": "SelectUpdateInsert",
							"script": "UpdatedRows select(mapColumn(\n\t\tLocation = Loc,\n\t\tCust_Key,\n\t\tCustomer_Id,\n\t\tEnd_Date = EndDate,\n\t\tBegin_Date = BeginDate\n\t))~> SelectUpdateInsert"
						},
						{
							"name": "UpdateUpdate",
							"script": "UpdatedRows select()~> UpdateUpdate"
						},
						{
							"name": "UnionInserts",
							"script": "NewRowToInsert, SelectUpdateInsert union(byName: true)~> UnionInserts"
						},
						{
							"name": "GenSKs",
							"script": "UnionInserts derive(Cust_Key = crc32(Customer_Id, Location),\n\tpartitionBy('hash', 1)) ~> GenSKs"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLCustomTrans')]",
				"[concat(variables('factoryId'), '/datasets/AzureCustmoerDim')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCDUpdate')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SCDUpdate",
								"type": "DatasetReference"
							},
							"name": "SCDUpdates",
							"script": "source(output(\n\t\tCust_Key as integer,\n\t\tCustmer_Id as integer,\n\t\tLocation as string,\n\t\tEnd_Date as date\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false) ~> SCDUpdates"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureCustmoerDim",
								"type": "DatasetReference"
							},
							"name": "SCDUpdateUpd",
							"script": "AlterRow1 sink(input(\n\t\tCust_Key as integer,\n\t\tCustomer_Id as integer,\n\t\tLocation as string,\n\t\tBegin_Date as date,\n\t\tEnd_Date as date\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['Cust_Key'],\n\tmapColumn(\n\t\tCust_Key,\n\t\tEnd_Date\n\t)) ~> SCDUpdateUpd"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1",
							"script": "Select1 alterRow(updateIf(Cust_Key>0)) ~> AlterRow1"
						},
						{
							"name": "Select1",
							"script": "SCDUpdates select(mapColumn(\n\t\tCust_Key,\n\t\tEnd_Date\n\t))~> Select1"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SCDUpdate')]",
				"[concat(variables('factoryId'), '/datasets/AzureCustmoerDim')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCDInsertUpdate')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SCDUpdateInsert",
								"type": "DatasetReference"
							},
							"name": "SCDInsertUodate",
							"script": "source(output(\n\t\tCustomer_Id as integer,\n\t\tLocation as string,\n\t\tCust_Key as integer,\n\t\tEnd_Date as date,\n\t\tBegin_Date as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SCDInsertUodate"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureCustmoerDim",
								"type": "DatasetReference"
							},
							"name": "SCDUpdateInsertNew",
							"script": "SCDInsertUodate sink(input(\n\t\tCust_Key as integer,\n\t\tCustomer_Id as integer,\n\t\tLocation as string,\n\t\tBegin_Date as date,\n\t\tEnd_Date as date\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\tCust_Key,\n\t\tCustomer_Id,\n\t\tLocation,\n\t\tBegin_Date,\n\t\tEnd_Date\n\t)) ~> SCDUpdateInsertNew"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SCDUpdateInsert')]",
				"[concat(variables('factoryId'), '/datasets/AzureCustmoerDim')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLCustomTrans')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureSqlDatabaseADFTest')]",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Customer_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Location",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Customers_Adf]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureCustmoerDim')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureSqlDatabaseADFTest')]",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Cust_Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Customer_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Location",
						"type": "varchar"
					},
					{
						"name": "Begin_Date",
						"type": "date"
					},
					{
						"name": "End_Date",
						"type": "date"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Customers_Dim_Adf]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobADFTest')]",
					"type": "LinkedServiceReference"
				},
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "SCD",
						"container": "adftest"
					},
					"columnDelimiter": ","
				},
				"schema": []
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCDUpdate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobADFTest')]",
					"type": "LinkedServiceReference"
				},
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TestML.csv",
						"folderPath": "SCD",
						"container": "adftest"
					},
					"columnDelimiter": ","
				},
				"schema": [
					{
						"name": "_c0",
						"type": "String"
					},
					{
						"name": "_c1",
						"type": "String"
					},
					{
						"name": "_c2",
						"type": "String"
					},
					{
						"name": "_c3",
						"type": "String"
					}
				]
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCDUpdateInsert')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobADFTest')]",
					"type": "LinkedServiceReference"
				},
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "testr.csv",
						"folderPath": "SCD",
						"container": "adftest"
					},
					"columnDelimiter": ","
				},
				"schema": [
					{
						"name": "_c0",
						"type": "String"
					},
					{
						"name": "_c1",
						"type": "String"
					},
					{
						"name": "_c2",
						"type": "String"
					},
					{
						"name": "_c3",
						"type": "String"
					},
					{
						"name": "_c4",
						"type": "String"
					}
				]
			}
		}
	]
}